#!/bin/bash

function copy_status {
  if [ $? = 0 ]; then
    notify-send \
      "Copied!" \
      "The clipboard will be cleared in <b>45 sec</b>"
  else
    notify-send \
      "Error" \
      "Something went wrong.\nTry running pass manually."
  fi
}

function edit_status {
  if [ $? = 0 ]; then
    notify-send \
      "Success!" \
      "The entry has been modified"
  else
    notify-send \
      "Failure!" \
      "The entry has <b>not</b> been modified"
  fi
}

function generate_password {
  pass generate -i -c "$option"
  copy_status
}

function type {
  xdotool type --clearmodifiers --delay=0 "$1"
}

function press {
  xdotool key "$1"
}

function password {
  pass show "$option" | sed -n '1p'
}

function login {
  pass show "$option" | sed -n '2p'
}

function account_id {
  pass show "$option" | sed -n '3p'
}


HELP="<b>Return</b>         <i>Autofill</i>
<b>Shift+Return</b>   <i>Insert password or login</i>
<b>Control+Return</b> <i>Edit entry</i>
<b>Alt+Return</b>     <i>Generate new password</i>
<b>Control+q</b>      <i>Show QR-code</i>"

option=$(\
  pass git ls-files \
  | grep '.gpg$' \
  | { sed -e 's/.gpg$//' ; echo "perso/carte-bleue"; } \
  | { sed -e 's/.gpg$//' ; echo "tmp"; } \
  | rofi \
      -dmenu \
      -lines 5 \
      -i \
      -p 󰟵 \
      -no-history \
      -kb-custom-1 "Return" \
      -kb-custom-2 "Shift+Return" \
      -kb-custom-3 "Control+Return" \
      -kb-custom-4 "Alt+Return" \
      -kb-custom-5 "Control+q" \
      -kb-accept-entry "" \
      -kb-accept-custom "" \
      -kb-accept-alt "" \
      -mesg "$HELP"
)

rofi_signal=$?

if [ ${#option} -gt 0 ]; then
  # The exit code for -kb-custom-X is X+9
  case $rofi_signal in
    10)
      case "$option" in
      tmp)
        generate_password
        ;;
      perso/carte-bleue)
        PASSWORD_STORE_CLIP_TIME=5 pass show -c1 perso/carte-bleue
        press "Control_L+v"
        press Tab
        PASSWORD_STORE_CLIP_TIME=5 pass show -c2 perso/carte-bleue
        press "Control_L+v"
        press Tab
        PASSWORD_STORE_CLIP_TIME=5 pass show -c3 perso/carte-bleue
        press "Control_L+v"
        ;;

      # password only
      perso/linux | \
      perso/microsoft |\
      */google)
        type "$(password)"
        press Return
        ;;

      perso/assurance-maladie)
        type "$(password)"
        ;;

      # passwords shows up after we validate the login
      pro/azure |\
      pro/elevo | \
      pro/payfit | \
      perso/impots.gouv.fr | \
      perso/amazon |\
      perso/pole-emploi |\
      pro/newrelic)
        type "$(login)"
        press Return
        sleep 1
        type "$(password)"
        press Return
        ;;

      pro/bitwarden)
        type "$(login)"
        press Return
        sleep 1
        press Tab
        type "$(password)"
        press Return
        ;;

      pro/swile* | \
      pro/onoff)
        press Tab
        press Tab
        type "$(login)"
        press Tab
        type "$(password)"
        press Return
        ;;

      perso/cpf |\
      perso/trainline)
        type "$(login)"
        press Tab
        press Tab
        type "$(password)"
        press Return
        ;;

      # “normal” case where login and password fields are visible, but the
      # first field is not focused
      pro/travelperk |\
      perso/paypal |\
      perso/bankin)
        press Tab
        type "$(login)"
        press Tab
        type "$(password)"
        press Return
        ;;

      # “normal” case where login and password fields are visible
      *)
        type "$(login)"
        press Tab
        type "$(password)"
        press Return
        ;;
      esac
      ;;
    11)
      answer=$(\
        echo -e "Password\nLogin" \
        | rofi \
            -dmenu \
            -lines 2 \
            -i \
            -p  \
            -no-history \
      )
      if [ ${#answer} -gt 0 ]; then
        case $answer in
          "Password")
            type "$(password)"
            ;;
          *)
            type "$(login)"
            ;;
        esac
      fi
      ;;
    12)
      kitty -- fish -c "pass edit '$option'"
      edit_status
      ;;
    13)
      pass git ls-files | grep "$option"
      if [ $? = 0 ]; then
        answer=$(\
          echo -e "✔ Yes\n✖ No" \
          | rofi \
              -dmenu \
              -lines 2 \
              -i \
              -p  \
              -no-history \
              -mesg " You are about to change password for <b>$option</b>. Is that OK?"
        )
        if [ ${#answer} -gt 0 ]; then
          case $answer in
            "✔ Yes")
              generate_password
              ;;
            *)
              notify-send \
                "Aborted!" \
                "Nothing was changed!"
            ;;
          esac
        else
          notify-send \
            "Aborted!" \
            "Nothing was changed!"
        fi
      else
        pass generate -c "$option"
        copy_status
      fi
      ;;
    14)
      pass -q1 "$option"
      ;;
  esac
fi
